{"version":3,"sources":["Audio/Cev_H2.mp3","Audio/Dsc_Oh.mp3","Audio/Heater-1.mp3","Audio/Heater-2.mp3","Audio/Heater-3.mp3","Audio/Heater-4_1.mp3","Audio/Heater-6.mp3","Audio/Kick_n_Hat.mp3","Audio/RP4_KICK_1.mp3","Components/Display.js","Components/DrumPad.js","Actions/index.js","App.js","serviceWorker.js","Reducers/selection.js","Reducers/index.js","index.js"],"names":["module","exports","Display","selection","useSelector","state","selector","id","clips","sound","Heater1","label","Heater2","Heater3","Heater4","Heater6","Dsc_Oh","Kick_n_Hat","RP4_KICK_1","Cev_H2","handleKeydown","e","console","log","keyCode","document","getElementById","play","DrumPad","dispatch","useDispatch","handleClick","event","target","value","type","payload","renderButtonAndSound","map","soundObj","key","className","onClick","src","useEffect","addEventListener","App","Boolean","window","location","hostname","match","action","allReducers","combineReducers","seletion","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,4KCa5BC,EAVC,WACd,IAAMC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAE/C,OACE,yBAAKC,GAAG,WACN,2BAAIJ,K,wJCOJK,EAAQ,CACZ,CAAEC,MAAOC,IAASH,GAAI,UAAWI,MAAO,KACxC,CAAEF,MAAOG,IAASL,GAAI,UAAWI,MAAO,KACxC,CAAEF,MAAOI,IAASN,GAAI,UAAWI,MAAO,KAExC,CAAEF,MAAOK,IAASP,GAAI,UAAWI,MAAO,KACxC,CAAEF,MAAOM,IAASR,GAAI,OAAQI,MAAO,KACrC,CAAEF,MAAOO,IAAQT,GAAI,UAAWI,MAAO,KAEvC,CAAEF,MAAOQ,IAAYV,GAAI,aAAcI,MAAO,KAC9C,CAAEF,MAAOS,IAAYX,GAAI,OAAQI,MAAO,KACxC,CAAEF,MAAOU,IAAQZ,GAAI,YAAaI,MAAO,MAOrCS,EAAgB,SAACC,GAErB,OADAC,QAAQC,IAAIF,EAAEG,SACNH,EAAEG,SACR,KAAK,GACHC,SAASC,eAAe,KAAKC,OAC7B,MACF,KAAK,GACHF,SAASC,eAAe,KAAKC,OAC7B,MACF,KAAK,GACHF,SAASC,eAAe,KAAKC,OAC7B,MAEF,KAAK,GACHF,SAASC,eAAe,KAAKC,OAC7B,MACF,KAAK,GACHF,SAASC,eAAe,KAAKC,OAC7B,MACF,KAAK,GACHF,SAASC,eAAe,KAAKC,OAC7B,MAEF,KAAK,GACHF,SAASC,eAAe,KAAKC,OAC7B,MACF,KAAK,GACHF,SAASC,eAAe,KAAKC,OAC7B,MACF,KAAK,GACHF,SAASC,eAAe,KAAKC,SA0CpBC,EArCC,WACd,IAAMC,EAAWC,cAEjB,SAASC,EAAYC,GA1CL,IAACzB,IA2CLyB,EAAMC,OAAOC,MA1CzBT,SAASC,eAAenB,GAAIoB,OA2C1BE,ECxEK,CACLM,KAAM,SACNC,QDsEyBJ,EAAMC,OAAO1B,KAGxC,IAAM8B,EAAuB7B,EAAM8B,KAAI,SAACC,EAAUC,GAChD,OACE,4BACEjC,GAAIgC,EAAShC,GACbiC,IAAKD,EAAS5B,MACd8B,UAAU,WACVP,MAAOK,EAAS5B,MAChB+B,QAASX,GAET,2BACExB,GAAIgC,EAAS5B,MACb8B,UAAU,OACVE,IAAKJ,EAAS9B,MACd0B,KAAK,cAJP,gDAQCI,EAAS5B,UAShB,OAJAiC,qBAAU,WACRnB,SAASoB,iBAAiB,UAAWzB,MAGhC,yBAAKqB,UAAU,sBAAsBJ,IEtF/BS,MAXf,WACE,OACE,yBAAKL,UAAU,OACb,yBAAKlC,GAAG,eAAekC,UAAU,OAC/B,kBAAC,EAAD,MACA,kBAAC,EAAD,SCEYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCPShD,EATG,WAAyB,IAAxBE,EAAuB,uDAAf,GAAI+C,EAAW,uCACxC,OAAQA,EAAOjB,MACb,IAJW,SAKT,OAAOiB,EAAOhB,QAChB,QACE,OAAO/B,ICAEgD,EAJKC,YAAgB,CAClChD,SAAUiD,ICKNC,EAAQC,YACZJ,EACAL,OAAOU,8BAAgCV,OAAOU,gCAGhDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QAGJ/B,SAASC,eAAe,SH+GpB,kBAAmBoC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/C,QAAQ+C,MAAMA,EAAMC,c","file":"static/js/main.78e959dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cev_H2.abe03961.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Dsc_Oh.5c9f8087.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-1.b1cfea05.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-2.0d219666.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-3.632e8772.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-4_1.d9de8a50.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-6.3062daca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Kick_n_Hat.200b4bd3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/RP4_KICK_1.09fda256.mp3\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Display = () => {\r\n  const selection = useSelector((state) => state.selector);\r\n\r\n  return (\r\n    <div id=\"display\">\r\n      <p>{selection}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeSelection } from \"../Actions\";\r\n// import { Howl, Howler } from \"howler\";\r\n\r\nimport Cev_H2 from \"../Audio/Cev_H2.mp3\";\r\nimport Dsc_Oh from \"../Audio/Dsc_Oh.mp3\";\r\nimport Heater1 from \"../Audio/Heater-1.mp3\";\r\nimport Heater2 from \"../Audio/Heater-2.mp3\";\r\nimport Heater3 from \"../Audio/Heater-3.mp3\";\r\nimport Heater4 from \"../Audio/Heater-4_1.mp3\";\r\nimport Heater6 from \"../Audio/Heater-6.mp3\";\r\nimport Kick_n_Hat from \"../Audio/Kick_n_Hat.mp3\";\r\nimport RP4_KICK_1 from \"../Audio/RP4_KICK_1.mp3\";\r\n\r\nconst clips = [\r\n  { sound: Heater1, id: \"Heater1\", label: \"Q\" },\r\n  { sound: Heater2, id: \"Heater2\", label: \"W\" },\r\n  { sound: Heater3, id: \"Heater3\", label: \"E\" },\r\n\r\n  { sound: Heater4, id: \"Heater4\", label: \"A\" },\r\n  { sound: Heater6, id: \"Clap\", label: \"S\" },\r\n  { sound: Dsc_Oh, id: \"Open HH\", label: \"D\" },\r\n\r\n  { sound: Kick_n_Hat, id: \"Kick n'Hat\", label: \"Z\" },\r\n  { sound: RP4_KICK_1, id: \"Kick\", label: \"X\" },\r\n  { sound: Cev_H2, id: \"Closed HH\", label: \"C\" },\r\n];\r\n\r\nconst soundPlay = (id) => {\r\n  document.getElementById(id).play();\r\n};\r\n\r\nconst handleKeydown = (e) => {\r\n  console.log(e.keyCode);\r\n  switch (e.keyCode) {\r\n    case 81:\r\n      document.getElementById(\"Q\").play();\r\n      break;\r\n    case 87:\r\n      document.getElementById(\"W\").play();\r\n      break;\r\n    case 69:\r\n      document.getElementById(\"E\").play();\r\n      break;\r\n\r\n    case 65:\r\n      document.getElementById(\"A\").play();\r\n      break;\r\n    case 83:\r\n      document.getElementById(\"S\").play();\r\n      break;\r\n    case 68:\r\n      document.getElementById(\"D\").play();\r\n      break;\r\n\r\n    case 90:\r\n      document.getElementById(\"Z\").play();\r\n      break;\r\n    case 88:\r\n      document.getElementById(\"X\").play();\r\n      break;\r\n    case 67:\r\n      document.getElementById(\"C\").play();\r\n      break;\r\n  }\r\n};\r\n\r\nconst DrumPad = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClick(event) {\r\n    soundPlay(event.target.value);\r\n    dispatch(changeSelection(event.target.id));\r\n  }\r\n\r\n  const renderButtonAndSound = clips.map((soundObj, key) => {\r\n    return (\r\n      <button\r\n        id={soundObj.id}\r\n        key={soundObj.label}\r\n        className=\"drum-pad\"\r\n        value={soundObj.label}\r\n        onClick={handleClick}\r\n      >\r\n        <audio\r\n          id={soundObj.label}\r\n          className=\"clip\"\r\n          src={soundObj.sound}\r\n          type=\"audio/mpeg\"\r\n        >\r\n          Your browser does not support the audio tag.\r\n        </audio>\r\n        {soundObj.label}\r\n      </button>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeydown);\r\n  });\r\n\r\n  return <div className=\"drum-pad-container\">{renderButtonAndSound}</div>;\r\n};\r\n\r\nexport default DrumPad;\r\n","export const changeSelection = (value) => {\r\n  return {\r\n    type: \"UPDATE\",\r\n    payload: value,\r\n  };\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Display from \"./Components/Display\";\nimport DrumPad from \"./Components/DrumPad\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"drum-machine\" className=\"App\">\n        <DrumPad />\n        <Display />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const UPDATE = \"UPDATE\";\r\n\r\nconst selection = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case UPDATE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selection;\r\n","import seletion from \"./selection\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  selector: seletion,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./Reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}